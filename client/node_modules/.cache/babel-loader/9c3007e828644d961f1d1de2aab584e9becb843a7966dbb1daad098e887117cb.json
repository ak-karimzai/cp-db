{"ast":null,"code":"import FormTag from \"./forms/FormTag.vue\";\nimport TextInput from \"./forms/TextInput.vue\";\nimport Security from \"./security\";\nimport { store } from \"./store\";\nexport default {\n  name: \"UserEdit\",\n  components: {\n    FormTag,\n    TextInput\n  },\n  data() {\n    return {\n      ready: false,\n      store,\n      user: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        user_password: \"\",\n        user_role: \"\"\n      }\n    };\n  },\n  beforeMount() {\n    if (this.$route.params.userId !== 0) {\n      fetch(`${process.env.VUE_APP_SERVER_API}/users/${this.$route.params.userId}`, Security.requestOptionsWithoutBody()).then(response => response.json()).then(response => {\n        if (response.error) {\n          this.$emit(\"error\", response.error.message);\n        } else {\n          this.user = response.data;\n          this.ready = true;\n        }\n      }).catch(err => this.$emit(\"error\", err));\n    } else {\n      this.ready = true;\n    }\n  }\n};","map":{"version":3,"names":["FormTag","TextInput","Security","store","name","components","data","ready","user","id","first_name","last_name","username","user_password","user_role","beforeMount","$route","params","userId","fetch","process","env","VUE_APP_SERVER_API","requestOptionsWithoutBody","then","response","json","error","$emit","message","catch","err"],"sources":["/home/khalid/uni/6thsem/cp_db/new_code/client/src/components/UserEdit.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"col\">\n      <div class=\"row\">\n        <h1 class=\"mt-3\">User</h1>\n        <hr />\n        <form-tag v-if=\"this.ready\" :store=\"this.store\">\n          <text-input\n            label=\"Last Name\"\n            name=\"last_name\"\n            value=\"user.last_name\"\n            type=\"text\"\n            v-model=\"user.last_name\"\n            required=\"true\"\n          ></text-input>\n\n          <text-input\n            label=\"First Name\"\n            name=\"first_name\"\n            value=\"user.first_name\"\n            type=\"text\"\n            v-model=\"user.first_name\"\n            required=\"true\"\n          ></text-input>\n\n          <text-input\n            label=\"Username\"\n            name=\"username\"\n            value=\"user.username\"\n            type=\"text\"\n            v-model=\"user.username\"\n            required=\"true\"\n          ></text-input>\n\n          <text-input\n            v-if=\"user.id === 0\"\n            label=\"Password\"\n            name=\"user_password\"\n            value=\"user.user_password\"\n            type=\"password\"\n            v-model=\"user.user_password\"\n            required=\"true\"\n          ></text-input>\n\n          <text-input\n            v-else\n            label=\"Password\"\n            name=\"user_password\"\n            value=\"user.user_password\"\n            type=\"password\"\n            v-model=\"user.user_password\"\n            required=\"false\"\n          ></text-input>\n\n          <text-input\n            label=\"Role\"\n            name=\"user_role\"\n            value=\"user.user_role\"\n            type=\"text\"\n            v-model=\"user.user_role\"\n            required=\"true\"\n          ></text-input>\n        </form-tag>\n        <h1 v-else class=\"mt-3\">Loading...</h1>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FormTag from \"./forms/FormTag.vue\";\nimport TextInput from \"./forms/TextInput.vue\";\nimport Security from \"./security\";\nimport { store } from \"./store\";\n\nexport default {\n  name: \"UserEdit\",\n  components: {\n    FormTag,\n    TextInput,\n  },\n  data() {\n    return {\n      ready: false,\n      store,\n      user: {\n        id: 0,\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        user_password: \"\",\n        user_role: \"\",\n      },\n    };\n  },\n  beforeMount() {\n    if (this.$route.params.userId !== 0) {\n      fetch(\n        `${process.env.VUE_APP_SERVER_API}/users/${this.$route.params.userId}`,\n        Security.requestOptionsWithoutBody()\n      )\n        .then((response) => response.json())\n        .then((response) => {\n          if (response.error) {\n            this.$emit(\"error\", response.error.message);\n          } else {\n            this.user = response.data;\n            this.ready = true;\n          }\n        })\n        .catch((err) => this.$emit(\"error\", err));\n    } else {\n      this.ready = true;\n    }\n  },\n};\n</script>"],"mappings":"AAsEA,OAAOA,OAAM,MAAO,qBAAqB;AACzC,OAAOC,SAAQ,MAAO,uBAAuB;AAC7C,OAAOC,QAAO,MAAO,YAAY;AACjC,SAASC,KAAI,QAAS,SAAS;AAE/B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVL,OAAO;IACPC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,KAAK;MACZJ,KAAK;MACLK,IAAI,EAAE;QACJC,EAAE,EAAE,CAAC;QACLC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE,EAAE;QACjBC,SAAS,EAAE;MACb;IACF,CAAC;EACH,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,MAAK,KAAM,CAAC,EAAE;MACnCC,KAAK,CACF,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,UAAS,IAAI,CAACN,MAAM,CAACC,MAAM,CAACC,MAAO,EAAC,EACtEhB,QAAQ,CAACqB,yBAAyB,CAAC,CACrC,EACGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACE,KAAK,EAAE;UAClB,IAAI,CAACC,KAAK,CAAC,OAAO,EAAEH,QAAQ,CAACE,KAAK,CAACE,OAAO,CAAC;QAC7C,OAAO;UACL,IAAI,CAACrB,IAAG,GAAIiB,QAAQ,CAACnB,IAAI;UACzB,IAAI,CAACC,KAAI,GAAI,IAAI;QACnB;MACF,CAAC,EACAuB,KAAK,CAAEC,GAAG,IAAK,IAAI,CAACH,KAAK,CAAC,OAAO,EAAEG,GAAG,CAAC,CAAC;IAC7C,OAAO;MACL,IAAI,CAACxB,KAAI,GAAI,IAAI;IACnB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}